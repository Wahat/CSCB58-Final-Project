--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=19 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:33:SJ cbx_lpm_add_sub 2013:06:12:18:03:33:SJ cbx_lpm_compare 2013:06:12:18:03:33:SJ cbx_lpm_decode 2013:06:12:18:03:33:SJ cbx_mgl 2013:06:12:18:33:59:SJ cbx_stratix 2013:06:12:18:03:33:SJ cbx_stratixii 2013:06:12:18:03:33:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_tpa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1005w[3..0]	: WIRE;
	w_anode1015w[3..0]	: WIRE;
	w_anode1025w[3..0]	: WIRE;
	w_anode1035w[3..0]	: WIRE;
	w_anode1046w[2..0]	: WIRE;
	w_anode1055w[3..0]	: WIRE;
	w_anode1066w[3..0]	: WIRE;
	w_anode1076w[3..0]	: WIRE;
	w_anode1086w[3..0]	: WIRE;
	w_anode1096w[3..0]	: WIRE;
	w_anode1106w[3..0]	: WIRE;
	w_anode1116w[3..0]	: WIRE;
	w_anode1126w[3..0]	: WIRE;
	w_anode1137w[2..0]	: WIRE;
	w_anode1146w[3..0]	: WIRE;
	w_anode1157w[3..0]	: WIRE;
	w_anode1167w[3..0]	: WIRE;
	w_anode1177w[3..0]	: WIRE;
	w_anode1187w[3..0]	: WIRE;
	w_anode1197w[3..0]	: WIRE;
	w_anode1207w[3..0]	: WIRE;
	w_anode1217w[3..0]	: WIRE;
	w_anode853w[2..0]	: WIRE;
	w_anode866w[3..0]	: WIRE;
	w_anode883w[3..0]	: WIRE;
	w_anode893w[3..0]	: WIRE;
	w_anode903w[3..0]	: WIRE;
	w_anode913w[3..0]	: WIRE;
	w_anode923w[3..0]	: WIRE;
	w_anode933w[3..0]	: WIRE;
	w_anode943w[3..0]	: WIRE;
	w_anode955w[2..0]	: WIRE;
	w_anode964w[3..0]	: WIRE;
	w_anode975w[3..0]	: WIRE;
	w_anode985w[3..0]	: WIRE;
	w_anode995w[3..0]	: WIRE;
	w_data851w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode1217w[3..3], w_anode1207w[3..3], w_anode1197w[3..3], w_anode1187w[3..3], w_anode1177w[3..3], w_anode1167w[3..3], w_anode1157w[3..3], w_anode1146w[3..3]), ( w_anode1126w[3..3], w_anode1116w[3..3], w_anode1106w[3..3], w_anode1096w[3..3], w_anode1086w[3..3], w_anode1076w[3..3], w_anode1066w[3..3], w_anode1055w[3..3]), ( w_anode1035w[3..3], w_anode1025w[3..3], w_anode1015w[3..3], w_anode1005w[3..3], w_anode995w[3..3], w_anode985w[3..3], w_anode975w[3..3], w_anode964w[3..3]), ( w_anode943w[3..3], w_anode933w[3..3], w_anode923w[3..3], w_anode913w[3..3], w_anode903w[3..3], w_anode893w[3..3], w_anode883w[3..3], w_anode866w[3..3]));
	w_anode1005w[] = ( (w_anode1005w[2..2] & w_data851w[2..2]), (w_anode1005w[1..1] & (! w_data851w[1..1])), (w_anode1005w[0..0] & (! w_data851w[0..0])), w_anode955w[2..2]);
	w_anode1015w[] = ( (w_anode1015w[2..2] & w_data851w[2..2]), (w_anode1015w[1..1] & (! w_data851w[1..1])), (w_anode1015w[0..0] & w_data851w[0..0]), w_anode955w[2..2]);
	w_anode1025w[] = ( (w_anode1025w[2..2] & w_data851w[2..2]), (w_anode1025w[1..1] & w_data851w[1..1]), (w_anode1025w[0..0] & (! w_data851w[0..0])), w_anode955w[2..2]);
	w_anode1035w[] = ( (w_anode1035w[2..2] & w_data851w[2..2]), (w_anode1035w[1..1] & w_data851w[1..1]), (w_anode1035w[0..0] & w_data851w[0..0]), w_anode955w[2..2]);
	w_anode1046w[] = ( (w_anode1046w[1..1] & data_wire[4..4]), (w_anode1046w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1055w[] = ( (w_anode1055w[2..2] & (! w_data851w[2..2])), (w_anode1055w[1..1] & (! w_data851w[1..1])), (w_anode1055w[0..0] & (! w_data851w[0..0])), w_anode1046w[2..2]);
	w_anode1066w[] = ( (w_anode1066w[2..2] & (! w_data851w[2..2])), (w_anode1066w[1..1] & (! w_data851w[1..1])), (w_anode1066w[0..0] & w_data851w[0..0]), w_anode1046w[2..2]);
	w_anode1076w[] = ( (w_anode1076w[2..2] & (! w_data851w[2..2])), (w_anode1076w[1..1] & w_data851w[1..1]), (w_anode1076w[0..0] & (! w_data851w[0..0])), w_anode1046w[2..2]);
	w_anode1086w[] = ( (w_anode1086w[2..2] & (! w_data851w[2..2])), (w_anode1086w[1..1] & w_data851w[1..1]), (w_anode1086w[0..0] & w_data851w[0..0]), w_anode1046w[2..2]);
	w_anode1096w[] = ( (w_anode1096w[2..2] & w_data851w[2..2]), (w_anode1096w[1..1] & (! w_data851w[1..1])), (w_anode1096w[0..0] & (! w_data851w[0..0])), w_anode1046w[2..2]);
	w_anode1106w[] = ( (w_anode1106w[2..2] & w_data851w[2..2]), (w_anode1106w[1..1] & (! w_data851w[1..1])), (w_anode1106w[0..0] & w_data851w[0..0]), w_anode1046w[2..2]);
	w_anode1116w[] = ( (w_anode1116w[2..2] & w_data851w[2..2]), (w_anode1116w[1..1] & w_data851w[1..1]), (w_anode1116w[0..0] & (! w_data851w[0..0])), w_anode1046w[2..2]);
	w_anode1126w[] = ( (w_anode1126w[2..2] & w_data851w[2..2]), (w_anode1126w[1..1] & w_data851w[1..1]), (w_anode1126w[0..0] & w_data851w[0..0]), w_anode1046w[2..2]);
	w_anode1137w[] = ( (w_anode1137w[1..1] & data_wire[4..4]), (w_anode1137w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1146w[] = ( (w_anode1146w[2..2] & (! w_data851w[2..2])), (w_anode1146w[1..1] & (! w_data851w[1..1])), (w_anode1146w[0..0] & (! w_data851w[0..0])), w_anode1137w[2..2]);
	w_anode1157w[] = ( (w_anode1157w[2..2] & (! w_data851w[2..2])), (w_anode1157w[1..1] & (! w_data851w[1..1])), (w_anode1157w[0..0] & w_data851w[0..0]), w_anode1137w[2..2]);
	w_anode1167w[] = ( (w_anode1167w[2..2] & (! w_data851w[2..2])), (w_anode1167w[1..1] & w_data851w[1..1]), (w_anode1167w[0..0] & (! w_data851w[0..0])), w_anode1137w[2..2]);
	w_anode1177w[] = ( (w_anode1177w[2..2] & (! w_data851w[2..2])), (w_anode1177w[1..1] & w_data851w[1..1]), (w_anode1177w[0..0] & w_data851w[0..0]), w_anode1137w[2..2]);
	w_anode1187w[] = ( (w_anode1187w[2..2] & w_data851w[2..2]), (w_anode1187w[1..1] & (! w_data851w[1..1])), (w_anode1187w[0..0] & (! w_data851w[0..0])), w_anode1137w[2..2]);
	w_anode1197w[] = ( (w_anode1197w[2..2] & w_data851w[2..2]), (w_anode1197w[1..1] & (! w_data851w[1..1])), (w_anode1197w[0..0] & w_data851w[0..0]), w_anode1137w[2..2]);
	w_anode1207w[] = ( (w_anode1207w[2..2] & w_data851w[2..2]), (w_anode1207w[1..1] & w_data851w[1..1]), (w_anode1207w[0..0] & (! w_data851w[0..0])), w_anode1137w[2..2]);
	w_anode1217w[] = ( (w_anode1217w[2..2] & w_data851w[2..2]), (w_anode1217w[1..1] & w_data851w[1..1]), (w_anode1217w[0..0] & w_data851w[0..0]), w_anode1137w[2..2]);
	w_anode853w[] = ( (w_anode853w[1..1] & (! data_wire[4..4])), (w_anode853w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode866w[] = ( (w_anode866w[2..2] & (! w_data851w[2..2])), (w_anode866w[1..1] & (! w_data851w[1..1])), (w_anode866w[0..0] & (! w_data851w[0..0])), w_anode853w[2..2]);
	w_anode883w[] = ( (w_anode883w[2..2] & (! w_data851w[2..2])), (w_anode883w[1..1] & (! w_data851w[1..1])), (w_anode883w[0..0] & w_data851w[0..0]), w_anode853w[2..2]);
	w_anode893w[] = ( (w_anode893w[2..2] & (! w_data851w[2..2])), (w_anode893w[1..1] & w_data851w[1..1]), (w_anode893w[0..0] & (! w_data851w[0..0])), w_anode853w[2..2]);
	w_anode903w[] = ( (w_anode903w[2..2] & (! w_data851w[2..2])), (w_anode903w[1..1] & w_data851w[1..1]), (w_anode903w[0..0] & w_data851w[0..0]), w_anode853w[2..2]);
	w_anode913w[] = ( (w_anode913w[2..2] & w_data851w[2..2]), (w_anode913w[1..1] & (! w_data851w[1..1])), (w_anode913w[0..0] & (! w_data851w[0..0])), w_anode853w[2..2]);
	w_anode923w[] = ( (w_anode923w[2..2] & w_data851w[2..2]), (w_anode923w[1..1] & (! w_data851w[1..1])), (w_anode923w[0..0] & w_data851w[0..0]), w_anode853w[2..2]);
	w_anode933w[] = ( (w_anode933w[2..2] & w_data851w[2..2]), (w_anode933w[1..1] & w_data851w[1..1]), (w_anode933w[0..0] & (! w_data851w[0..0])), w_anode853w[2..2]);
	w_anode943w[] = ( (w_anode943w[2..2] & w_data851w[2..2]), (w_anode943w[1..1] & w_data851w[1..1]), (w_anode943w[0..0] & w_data851w[0..0]), w_anode853w[2..2]);
	w_anode955w[] = ( (w_anode955w[1..1] & (! data_wire[4..4])), (w_anode955w[0..0] & data_wire[3..3]), enable_wire);
	w_anode964w[] = ( (w_anode964w[2..2] & (! w_data851w[2..2])), (w_anode964w[1..1] & (! w_data851w[1..1])), (w_anode964w[0..0] & (! w_data851w[0..0])), w_anode955w[2..2]);
	w_anode975w[] = ( (w_anode975w[2..2] & (! w_data851w[2..2])), (w_anode975w[1..1] & (! w_data851w[1..1])), (w_anode975w[0..0] & w_data851w[0..0]), w_anode955w[2..2]);
	w_anode985w[] = ( (w_anode985w[2..2] & (! w_data851w[2..2])), (w_anode985w[1..1] & w_data851w[1..1]), (w_anode985w[0..0] & (! w_data851w[0..0])), w_anode955w[2..2]);
	w_anode995w[] = ( (w_anode995w[2..2] & (! w_data851w[2..2])), (w_anode995w[1..1] & w_data851w[1..1]), (w_anode995w[0..0] & w_data851w[0..0]), w_anode955w[2..2]);
	w_data851w[2..0] = data_wire[2..0];
END;
--VALID FILE
